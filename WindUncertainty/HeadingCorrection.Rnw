%% LyX 2.1.4 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass{article}
\usepackage{mathptmx}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\usepackage{geometry}
\geometry{verbose}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{amsmath}
\usepackage{amssymb}

\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
%% Because html converters don't know tabularnewline
\providecommand{\tabularnewline}{\\}

\AtBeginDocument{
  \def\labelitemii{\(\triangleright\)}
  \def\labelitemiii{\normalfont\bfseries{--}}
  \def\labelitemiv{\(\diamond\)}
}

\makeatother

\begin{document}

\section{Correcting the measurement of heading\label{sec:heading-correction}}


\subsection{The basis for the correction}

In Section 6.4 of the technical note on wind uncertainty, a correction
procedure was developed that used measured errors in the IRU ground-speed
components, evaluated by comparison to GPS, to deduce errors in the
pitch angle. A related procedure is developed here for estimating
the error in heading. The basis for the correction is that an error
in heading results in an error in how the measured body-relative components
of the acceleration are transformed to the ENU or \emph{l}-frame (in
the terminology of the previous discussion of the correction for pitch),
and these errors can be detected by comparing the actual acceleration
of the aircraft (determined from derivatives of the GPS-measured velocities)
to the body-relative measurements of acceleration after transformation
to the \emph{l}-frame. 

The accelerations measured by a strap-down inertial system like the
Honeywell systems on the GV and C-130 are the accelerations in the
reference frame of the aircraft, or the \emph{b}-frame. To transform
these to the \emph{l}-frame, the transformation by conventional definition
of the attitude angles is a rotation about the roll axis to level
the winds, a rotation about the pitch axis to level the longitudinal
axis of the aircraft, and a rotation about the vertical axis to point
the aircraft to the north. The result is the acceleration components
in the \emph{l}-frame. However, if there is an error in the heading,
$\delta\psi$, the last rotation will give final components $a_{x,y,z}$
that have errors of $\delta a_{x}=a_{x}(1-\cos\delta\psi)+a_{y}\sin\delta\psi$
and $\delta a_{y}=a_{y}(1-cos\delta\psi)-a_{x}\sin\delta\psi$ and
zero, or, for small angles,\\
\begin{align}
\left[\begin{array}{c}
\delta a_{x}\\
\delta a_{y}\\
\delta a_{z}
\end{array}\right] & =\left[\begin{array}{ccc}
0 & \delta\psi & 0\\
-\delta\psi & 0 & 0\\
0 & 0 & 0
\end{array}\right]\left[\begin{array}{c}
a_{x}\\
a_{y}\\
a_{z}
\end{array}\right]\label{eq:heading-error-equation}\\
\delta a_{x} & =a_{y}\delta\psi\label{eq:ax-error}\\
\delta a_{y} & =-a_{x}\delta\psi\label{eq:ay-error}\\
%\delta\psi & =\frac{1}{2}\left(\frac{\delta a_{x}}{a_{y}}-\frac{\delta a_{y}}{a_{x}}\right)\label{eq:estimator-equation}
\delta\psi & =\frac{a_y\delta a_x-a_x\delta a_y}{a_{x}^{2}+a_{y}^{2}}\label{eq:estimator-equation}
\end{align}
The last equation is obtained by minimizing the errors\footnote{If the error measure to be minimized is $\chi^{2}=(\delta a_{x}-a_{y}\delta\psi)^{2}+(\delta a_{y}+a_{x}\delta\psi)^{2}$,
differentiating $\chi^{2}$ with respect to $\delta\psi$ and setting
the result equal to zero gives (\ref{eq:estimator-equation}).}
 between the values of $\delta a_i$ given by (\ref{eq:ax-error}) and (\ref{eq:ay-error}) and the measured error given by $a_{i}^{*}-a_i$. The approach to be taken here is then to use the last equation (\ref{eq:estimator-equation})
to estimate the rotation $-\delta\psi$ that, applied
to the measured accelerations $a_{x,y}$, best matches the GPS-determined
accelerations $a_{x,y}^{*}$. The latter are determined from\\
\begin{equation}
\left[\begin{array}{c}
a_{x}^{*}\\
a_{y}^{*}
\end{array}\right]=\left[\begin{array}{c}
\frac{dv_{x}}{dt}\\
\frac{dv_{y}}{dt}
\end{array}\right]=\left[\begin{array}{c}
d(GGVEW)/dt\\
d(GGVNS)/dt
\end{array}\right]\ \ \ .\label{eq:acceleration-from-GPS}
\end{equation}

The transformation from the \emph{l}-frame to the \emph{b}-frame was
developed in section 6.4.5 of the Wind Uncertainty technical note,
following standard sources; see equation (55) in that document. 
Here the inverse transformation
is needed, which is just the transpose of the matrix given there.
The appropriate body-relative accelerations are represented by the
variables BACCX, BACCY, BACCZ for respectively the x, y, and z components
(in the aircraft coordinate system with x forward, y starboard, and
z downward). These will be represented by ($a_{x}^{(b)},\,a_{y}^{(b)},\,a_{z}^{(b)}$),
respectively. Then, with \{$\phi,\,\theta,\,\psi$\} representing
\{roll, pitch, heading\}, the transformation from the \emph{b}-frame
to the \emph{l}-frame is

\begin{equation}
R_{b}^{l}=\begin{bmatrix}\cos\psi\cos\phi+\sin\psi\sin\phi\sin\theta & \sin\psi\cos\theta & \cos\psi\sin\phi-\sin\psi\sin\theta\cos\phi\\
-\sin\psi\cos\phi+\cos\psi\sin\phi\sin\theta & \cos\psi\cos\theta & -\sin\psi\sin\phi-\cos\psi\sin\theta\sin\phi\\
-\cos\theta\sin\phi & \sin\theta & \cos\theta\cos\phi
\end{bmatrix}\label{eq:transform-b-to-l}
\end{equation}
so \\
\[
\mathbf{a}=R_{b}^{l}\mathbf{a^{(b)}}
\]


The last step then is to estimate the derivatives of
the GPS-measured velocity components. For this purpose, as in the
pitch-correction algorithm, the choice made here is to estimate the
derivatives using Savitzky-Golay polynomials, which are computationally
efficient, don't introduce a time shift, and can provide derivatives
directly. An averaging period of 30 s was used to reduce noise in the result but avoid smoothing that would distort results in 3-min turns. Interpolation filled some gaps in the measurements.

<<reinitialization,echo=FALSE,include=FALSE>>=

require(Ranadu, quietly = TRUE, warn.conflicts=FALSE)
require(ggplot2)
require(grid)
library(knitr)
require(ggthemes)
opts_chunk$set(echo=FALSE, include=FALSE, fig.lp="fig:")
opts_chunk$set(fig.width=6, fig.height=5, fig.loc="center", digits=4)
thisFileName <- "HeadingCorrection"
Directory <- DataDirectory ()
Flight <- "rf16h" 				
Project = "DEEPWAVE"			 
fname = sprintf("%s%s/%s%shPC.nc", Directory,Project,Project,Flight)
fname = sprintf ("%s%s/%s%s.nc", Directory, Project, Project, Flight)
VarNames <- c("BLATA", "BLONGA", "BNORMA", 
              "VNS", "VEW", "VSPD", "GGVNS", "GGVEW", 
              "GGVSPD", "LAT", "LON", "ALT", "THDG", "PITCH", "ROLL") 
Data <- getNetCDF (fname, standardVariables(VarNames))		
SaveRData <- sprintf("%s.Rdata", thisFileName)
data.rate <- 1
if ((Data$Time[2]-Data$Time[1]) <= 0.04) {data.rate <- 25}

####
transferAttributes <- function (dsub, d) {    ## unused function, just saved here
  ds <- dsub
  for (nm in names (ds)) {
    var <- sprintf ("d$%s", nm)
    A <- attributes (eval (parse (text=var)))
    # A[[1]] <- nrow (ds)
    A$dim <- nrow (ds)
    if (!grepl ('Time', nm)) {A$dim <- NULL}
    # A$class <- NULL
    attributes (ds[,nm]) <- A
  }
  return(ds)
}
####

## delay or advance the heading by n samples, for testing
n <- -7
n <- 7
n <- -2
NL = nrow(Data)
DS <- Data
if (n < 0) {
  Data$THDG <- c(Data$THDG[(1-n):NL],rep(Data$THDG[NL],-n))
} else if (n > 0) {
  Data$THDG <- c(rep(Data$THDG[1], n), Data$THDG[1:(NL-n)])
}
## preserve attributes, potentially lost for THDG with time shift
Data <- transferAttributes (Data, DS)
Cradeg <- pi / 180

@

<<Xform-l-from-b>>=

XformLB <- function (bvector, .roll, .pitch, .heading, .reverse=FALSE) {
  Cradeg <- pi/180
  sr <- sin(.roll*Cradeg); cr <- cos(.roll*Cradeg)
  sp <- sin(.pitch*Cradeg); cp <- cos(.pitch*Cradeg)
  sh <- sin(.heading*Cradeg); ch <- cos(.heading*Cradeg)
  M <- c (ch*cr+sh*sr*sp, -sh*cr+ch*sr*sp, -cp*sr, sh*cp, ch*cp, sp, 
          ch*sr-sh*sp*cr, -sh*sr-ch*sp*sr, cp*cr)
  dim (M) <- c(3,3)
  if (.reverse) {M <- t(M)}
  return (M %*% bvector)
}

Xform <- function (data) { # data must contain ROLL, PITCH, HEADING, 
                           # BLATA, BLONGA, BNORMA
  Cradeg <- pi/180
  if ("PITCHC" %in% names(data)) {data$PITCH <- data$PITCHC}
  
  ## note minus signs in the next line
  PITCH <- -data$PITCH * Cradeg; ROLL <- -data$ROLL * Cradeg
  THDG <- data$THDG * Cradeg

  cosphi <- cos (ROLL)
  sinphi <- sin (ROLL)
  costheta <- cos (PITCH)
  sintheta <- sin (PITCH)
  cospsi <- cos (THDG)
  sinpsi <- sin (THDG)
  G <- Gravity (data$LATC, data$GGALT)
  d <- data.frame("X" = data$BLONGA)
  d$Y <- data$BLATA
  d$Z <- data$BNORMA + G    ## need to add G for transform; 
                            ## it was removed from sensed accel.
  A <- as.matrix(d)
  DL <- nrow(data)
  One <- rep (1, DL)
  ZZ <- rep (0, DL)
  T1 <- aperm(array (c(One,ZZ,ZZ,ZZ,cosphi,-sinphi,ZZ,sinphi,cosphi), 
                     dim=c(DL,3,3)))
  T2 <- aperm(array (c (costheta,ZZ,sintheta,ZZ,One,ZZ,-sintheta,ZZ,costheta), 
                     dim=c(DL,3,3)))
  T3 <- aperm(array (c (cospsi,-sinpsi,ZZ,sinpsi,cospsi,ZZ,ZZ,ZZ,One), 
                     dim=c(DL,3,3)))
  AX <- vector ("numeric", DL)
  AY <- vector ("numeric", DL)
  AZ <- vector ("numeric", DL)
  for (i in 1:DL) {
    Y1 <- T1[,,i] %*% matrix (A[i,], 3, 1)
    Y2 <- T2[,,i] %*% Y1
    Y3 <- T3[,,i] %*% Y2
    AX[i] <- Y3[1]; AY[i] <- Y3[2]; AZ[i] <- Y3[3]
  }

  X <- zoo::na.approx (as.vector(AX), maxgap=100*data.rate, na.rm = FALSE)
  Y <- zoo::na.approx (as.vector(AY), maxgap=100*data.rate, na.rm = FALSE)
  Z <- zoo::na.approx (as.vector(AZ), maxgap=100*data.rate, na.rm = FALSE)
  X[is.na(X)] <- 0
  Y[is.na(Y)] <- 0
  Z <- Z - G
  Z[is.na(X)] <- 0
  return (data.frame(AX=X, AY=Y, AZ=Z))
}


@


\subsection{The GPS-derived estimate of accelerations}

The ground-speed components measured via GPS are shown in Fig.~\ref{fig:sg-poly-smoothing1},
and the derivative calculated and smoothed as described above is shown
in Fig.~\ref{fig:sg-poly-smoothing2}.

<<sg-poly-smoothing, include=TRUE, fig.lp="fig:", fig.cap=c("Ground-speed components measured using GPS.", "Estimated components of horizontal acceleration for DEEPWAVE flight rf15, obtained via differentiation of the GPS-measured variables GGVEW and GGVNS")>>=

# deal with missing values:
D <- Data[!is.na (Data$Time), ]
D <- transferAttributes (D, Data)
#interpolate if necessary:
D$GGVNS <- zoo::na.approx (as.vector(D$GGVNS), maxgap=100*data.rate, na.rm = FALSE)
D$GGVEW <- zoo::na.approx (as.vector(D$GGVEW), maxgap=100*data.rate, na.rm = FALSE)
D$GGVSPD <- zoo::na.approx (as.vector(D$GGVSPD), maxgap=100*data.rate, na.rm = FALSE)
# 1013 points (must be odd) to span about 1/5 Schuler osc. -- about 16.8 min
NF <- 30
D$vndot <- signal::sgolayfilt (D$GGVNS, 3, NF*data.rate+1, m=1)*data.rate  # m=1 for first deriv.
D$vedot <- signal::sgolayfilt (D$GGVEW, 3, NF*data.rate+1, m=1)*data.rate
D$vzdot <- signal::sgolayfilt (D$GGVSPD, 3, NF*data.rate+1, m=1)*data.rate
plotWAC(D[, c("Time", "GGVNS", "GGVEW")])
plotWAC(D[, c("Time", "vndot", "vedot", "vzdot")])

@


\subsection{The \emph{l}-frame accelerations}

The result of transforming the accelerations in the \emph{b}-frame
to the \emph{l}-frame is shown in Fig.~\ref{fig:get-b-vector-and-transform1}.
This flight was devoted to calibration maneuvers, so there are circle
maneuvers (e.g., about 3:45:00), pitch maneuvers (e.g., about 4:27:00)
and yaw maneuvers (e.g., about 4:33:00) as well as speed runs (e.g.,
about 5:05:00). This accounts for the large horizontal accelerations
(in the circles) and the large vertical accelerations (in the pitch
maneuvers). The good matches between measured accelerations translated
to the \emph{l}-frame and those deduced from the derivative of the
GPS-measured ground-speed components, shown in Figs.~\ref{fig:get-b-vector-and-transform2}
and \ref{fig:get-b-vector-and-transform3} provide good evidence for
the approach being taken and the suitability of the transformation
used.

<<get-b-vector-and-transform, include=TRUE, fig.cap=c("Measured accelerations translated to the l-frame (x east, y north, z up) for DEEPWAVE flight 15, 3 July 2014..", "Measured accelerations from a circle maneuver, 3:40:00--3:55:00 UTC on 3 July 2014, DEEPWAVE flight 15. Also shown as dotted lines are the accelerations deduced from differentiating the corresponding GPS-measured ground-speed components.", "As for the preceding figure but for a pitch maneuver, 4:25:00--4:30:00 UTC.")>>=

# LHDG <- nrow(D)
# LACCX <- vector ("numeric", LHDG)
# LACCY <- vector ("numeric", LHDG)
# LACCZ <- vector ("numeric", LHDG)
# for (i in 1:LHDG) {
  # bl <- c(D$BLONGA[i], D$BLATA[i], D$BNORMA[i]) 
  # bb <- as.vector(XformLB (bl, D$ROLL[i], D$PITCH[i], D$THDG[i], .reverse=FALSE))
  # LACCX[i] <- bb[1]
  # LACCY[i] <- bb[2]
  # LACCZ[i] <- bb[3]
# }
d <- Xform (D)
D$LACCX <- d$AY
D$LACCY <- d$AX
D$LACCZ <- d$AZ
D$LACCX <- signal::sgolayfilt (D$LACCX, 3, NF*data.rate+1, m=0)
D$LACCY <- signal::sgolayfilt (D$LACCY, 3, NF*data.rate+1, m=0)
D$LACCZ <- signal::sgolayfilt (D$LACCZ, 3, NF*data.rate+1, m=0)
r <- setRange(D$Time, 0, 0)
if (Flight == "rf16h") {r <- setRange(D$Time, 80700,82000)}
if (Flight == "rf15h") {r <- setRange(D$Time, 33800, 35500)}
plotWAC(D[r, c("Time", "LACCX", "LACCY", "LACCZ")], ylab="acceleration [m/s^2]")
V <- c("Time", "LACCX", "LACCY", "LACCZ", "vedot", "vndot", "vzdot")
#r <- setRange(D$Time, 33800,35500)
plotWAC(D[r,V], lw=c(3,3,3,5,5,5), lty=c(1,1,1,3,3,3))
# r <- setRange(D$Time, 42500, 43000)
# plotWAC(D[r,V], lw=c(3,3,3,5,5,5), lty=c(1,1,1,3,3,5))
# lineWAC(D$Time[r], D$vzdot[r], col='green', lwd=2, lty=2)


@


\subsection{The differences in acceleration components}

Equation \ref{eq:error-estimator} is the basis for estimating the
error in heading, so it is useful to consider the two terms in that
equation and the combined prediction, to check for consistency. Figure~\ref{fig:error-components}
shows the two estimates of error and their combination as in (\ref{eq:error-estimator}).

<<error-components, include=TRUE, fig.cap="Heading error as estimated from the two terms in (6) and their combination.">>=

# D$err1 <- (D$vedot - D$LACCX) / D$LACCY * 180/pi
# D$err2 <- -(D$vndot - D$LACCY) / D$LACCX * 180/pi
# hlim <- 0.1
# D$herr <- D$err1
# t <- abs(D$LACCY) < abs(D$LACCX)
# D$herr[t] <- D$err2[t]
# t <- abs(D$LACCX) + abs(D$LACCY) < hlim*2
# D$herr[t] <- NA
# D$herr <- zoo::na.approx (as.vector(D$herr), maxgap=100, na.rm = FALSE)
# t <- is.na(D$herr)
# D$herr[t] <- 0
# D$herr <- signal::sgolayfilt (D$herr, 3, 1021, m=0)  
# D$herr[t] <- NA
# r <- setRange(D$Time, 33800,35500)
# plotWAC (D[r, c("Time", "err1", "err2", "herr")], ylim=c(-10.,10.))

D$DAX <- D$vedot - D$LACCX
D$DAY <- D$vndot - D$LACCY
D$DPSI <- (D$LACCY*D$DAX - D$LACCX*D$DAY) / (D$LACCX^2 + D$LACCY^2) / Cradeg
D$DPSI[D$ACC < 1] <- NA
D$DPSI[D$TASX < 130] <- NA
D$DPSI[abs(D$VSPD) > 4] <- NA
D$HCOR <- zoo::na.approx (as.vector(D$DPSI), maxgap=50000*data.rate, na.rm = FALSE)
D$DPSIS <- signal::sgolayfilt (D$HCOR, 3, 60*data.rate+1, m=0)

VP <- c("Time", "DPSIS", "HCOR")
plotWAC (D[, VP], ylim=c(-2,2), lwd=c(1,2), lty=c(1,2))
plotWAC (D[r, VP], lwd=c(2,4), lty=c(1,2), ylim=c(-2,2))
D$ACC <- sqrt(D$LACCX^2+D$LACCY^2)
Valid <- D$TASX > 130 & D$ACC > 1
DD <- D
DD[!Valid,] <- NA
plotWAC(DD[, VP], ylim=c(-.5,.5), lwd=c(1,3), col=c('blue', 'red'))

## add a slowly updating heading-correction variable:
D$DPSI[D$ACC < 1] <- NA
D$DPSI[D$TASX < 130] <- NA
D$HCOR <- zoo::na.approx (as.vector(D$DPSI), maxgap=50000*data.rate, na.rm = FALSE)
HCOR <- 0
f <- 300*25
D$HCOR <- D$DPSI
for (i in 1:nrow(D)) {
  v <- (D$ACC[i] > 1) && (D$TASX[i] > 130) && (abs(D$VSPD) < 4)
  if (v) {HCOR <- HCOR + (D$DPSI[i]-HCOR)/f}
  D$HCOR[i] <- HCOR
}
lineWAC(D$Time, D$HCOR, col='darkgreen', lwd=2)



@

In a reference frame called the $l$-frame or ENU frame, where the
coordinate axes are local-east, local-north, and upward, the preceding
section showed that the pitch and roll errors are related, vis (\ref{eq:delta-theta})
and (\ref{eq:delta-phi}), to the time-derivatives of the errors in
horizontal velocity. Pitch and roll as used in these equations will
be the respective errors in platform alignment\footnote{The inertial system used is a strap-down system, so there is no actual
motion of the ``platform''. Instead, from measured rotations and
accelerations, the system calculates the expected orientation if there
were a true stabilized platform. The errors referenced here are those
relative to that calculated platform orientation.} in the north-south and east-west directions, so these angles must
be transformed to account for the orientation of the aircraft when
it is not flying straight-and-level to the north. Coordinates in the
body or $b$-frame of the aircraft are obtained from those in the
ENU or $l$-frame by applying three rotations to account for the heading,
pitch, and roll of the $b$-frame. This transformation leads to pitch
errors in the body frame of the aircraft (where measured pitch and
roll are measured and where the pitch measurement affects the calculated
vertical wind) that are mixtures of pitch and roll errors in the $l$-frame,
with the mixture dependent primarily on the heading. A positive pitch
error for northbound level flight will be a negative pitch error for
southbound level flight, and for eastbound flight an $l$-frame roll
error becomes a $b$-frame pitch error while an $l$-frame pitch error
become a negative $b$-frame roll error. 

Consider a unit vector representing the orientation errors in pitch
and roll in the $l$-frame, with components \{$\sin\delta\phi,\,\sin\delta\theta,\,\sqrt{1-\sin^{2}\delta\phi-\sin^{2}\delta\theta}$\}
or, because the errors are always small, approximately \{$\delta\phi,\,\delta\theta,\,1$\}.
The three-angle transformation of this vector from the $l$-frame
to the $b$-frame is then represented by the following matrices, with
\{$\phi,\,\theta,\,\psi$\} representing \{roll, pitch, heading\}:

\begin{equation}
R_{l}^{b}=\begin{bmatrix}\cos\psi\cos\phi+\sin\psi\sin\phi\sin\theta & -\sin\psi\cos\phi+\cos\psi\sin\phi\sin\theta & -\cos\theta\sin\phi\\
\sin\psi\cos\theta & \cos\psi\cos\theta & \sin\theta\\
\cos\psi\sin\phi-\sin\psi\sin\theta\cos\phi & -\sin\psi\sin\phi-\cos\psi\sin\theta\sin\phi & \cos\theta\cos\phi
\end{bmatrix}\label{eq:transform-l-to-b}
\end{equation}


\begin{eqnarray}
\mathbf{b^{(b)}=}R_{l}^{b}\mathbf{b^{(l)}} & \approx & \left[\begin{array}{ccc}
\cos\psi & -\sin\psi & 0\\
\sin\psi & \cos\psi & 0\\
0 & 0 & 1
\end{array}\right]\begin{bmatrix}\delta\phi\\
\delta\theta\\
1
\end{bmatrix}=\begin{bmatrix}\cos\psi\delta\phi-\sin\psi\delta\theta\\
\sin\psi\delta\phi+\cos\psi\delta\theta\\
1
\end{bmatrix}\label{eq:b-vector-in-b-frame}
\end{eqnarray}


which leads to $\delta\theta^{(b)}$ and $\delta\phi^{(b)}$, the
pitch and roll errors in the $b$-frame:

\begin{eqnarray}
\delta\theta^{(b)} & \simeq & \sin\psi\delta\phi+\cos\psi\delta\theta\label{eq:final-answer}\\
\delta\phi^{(b)} & \approx & \cos\psi\delta\phi-\sin\psi\delta\theta\nonumber 
\end{eqnarray}
In turns, the roll angle is no longer negligible, so in general the
full transformation should be used and the pitch error should be found
from the results of (\ref{eq:b-vector-in-b-frame}). Because the pitch
and roll angles are applied by this full transformation, the resulting
errors are obtained by subtracting the measured pitch and roll from
the transformed result; e.g., \\
\begin{equation}
\delta\theta^{(b)}=\arctan\frac{b_{2}^{(b)}}{b_{3}^{(b)}}-\theta\label{eq:pitch-error-wo-approx}
\end{equation}
This pitch error should then be subtracted from the measured pitch
to obtain a corrected value of the pitch for use in the calculation
of vertical wind.




\end{document}
