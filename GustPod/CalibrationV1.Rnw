%% LyX 2.1.0 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass[12pt,english]{report}
\usepackage{mathptmx}
\usepackage[T1]{fontenc}
\usepackage[letterpaper]{geometry}
\geometry{verbose,tmargin=3.54cm,bmargin=2.54cm,lmargin=2.54cm,rmargin=2.54cm,headheight=1cm,headsep=2cm,footskip=0.5cm}
\usepackage{fancyhdr}
\pagestyle{fancy}
\setlength{\parskip}{\medskipamount}
\setlength{\parindent}{0pt}
\usepackage{color}

\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
%% Because html converters don't know tabularnewline
\providecommand{\tabularnewline}{\\}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\input colordvi
\usepackage{color}
\fancyhead{}
\fancyfoot[CE,CO]{}
\newtoks{\addressee} \global\addressee={}
\newdimen\longindent \longindent=3.5truein
\fancyhead[L]{Memo to: \the\addressee \\ \datetoday \\ Page \thepage \hfill}
\renewcommand{\headrulewidth}{0.0pt}
\newenvironment{lyxlist}[1]
{\begin{list}{}
{\settowidth{\labelwidth}{#1}
\setlength{\leftmargin}{\labelwidth}
\addtolength{\leftmargin}{\labelsep}
\renewcommand{\makelabel}[1]{##1\hfil}}}
{\end{list}}
\newcommand{\datetoday}{\number\day\space
     \ifcase\month\or January\or February\or March\or April\or May\or
     June\or July\or August\or September\or October\or November\or
     December\fi
     \space\number\year}
\newcommand{\EOLmemo}{\null \vskip-1.5truein
{\raggedright \textsf{\textsc{\large \textcolor{blue}{Earth Observing Laboratory}}}}\par
{\raggedright \textsf{\textsl{\textcolor{blue}{Memorandum:}}}} \par \vskip6pt
{\color{blue}{\hrule}}\par
\vskip0.3truein \leftline{\hskip \longindent \datetoday} \vskip0.2truein
\thispagestyle{empty}}
\newcommand{\attachm}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachments:] {#1}
\end{lyxlist}}
\newcommand{\cc}[1]{\begin{lyxlist}{Attachments:00}
\item [cc:] {#1}
\end{lyxlist}}
\newcommand{\attach}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachment:] {#1}
\end{lyxlist}}
%usage: \encl{A\\B\\C} or \cc{ma,e1\\name2\\name3}

\makeatother

\usepackage{babel}
\begin{document}
\EOLmemo 

\global\addressee={DEEPWAVE field catalog}% change "File" to the "To:" name

\begin{tabular}{ll}
\textsf{\textsc{\textcolor{blue}{To:}}} & \the\addressee\tabularnewline
\textsf{\textsc{\textcolor{blue}{From:}}} & Al Cooper\tabularnewline
 \textsf{\textsc{\textcolor{blue}{Subject:}}} & Calibration results and processing of the gust-pod measurements on
the GV\tabularnewline
\end{tabular}

\bigskip

                                                                    
                                                                     
                                                                     %
                                                                     
                                                                     Flight RF15 on 3 July 2014 was devoted to calibration maneuvers. This
                                                                     note uses that flight, combined with similar calibration maneuvers flown on RF11 at 40,000 ft, to determine sensitivity coefficients for angle
                                                                     of attack (AKRD and AK\_GP) and for sideslip (SSRD and SS\_GP). It
                                                                     also describes some other results including timing studies.
                                                                     
                                                                     
                                                                     \section*{Calibration of the Angle of Attack}
                                                                     
                                                                     The first-order expression for the vertical wind $w$ is
                                                                     
                                                                     \begin{equation}
                                                                     w=V\sin(\alpha-\phi)+w_{p}\label{eq:VWind}
                                                                     \end{equation}
                                                                     
                                                                     
                                                                     where $V$ is the true airspeed, $\alpha$ the angle of attack, $\phi$
                                                                       the pitch, and $w_{p}$ the vertical motion or rate-of-climb of the
                                                                     aircraft. The solution for the angle-of-attack is
                                                                     
                                                                     \begin{equation}
                                                                     \alpha=\phi+\arcsin\frac{w-w_{p}}{V}\label{eq:SolvedForAOA}
                                                                     \end{equation}
                                                                     
                                                                     
                                                                     If it is reasonable to assume that $w$ is zero, or that it averages
                                                                     to zero, then 
                                                                     
                                                                     \begin{equation}
                                                                     \alpha^*=\phi-\arcsin\frac{w_{p}}{V}\label{eq:alphaWithwZero}
                                                                     \end{equation}
                                                                     
                                                                     
                                                                     can be used as a reference angle-of-attack to which to fit a functional for. It requires the measurements
                                                                     of pitch, rate-of-climb, and true airspeed. Even in the presence of
                                                                     waves, fitting to this as functions of the radome measurements and
                                                                     other flight characteristics should average any real effects of vertical
                                                                     wind as long as the vertical wind over the flight segments used averages
                                                                     to zero.
                                                                     
                                                                     In the case of the radome, the relevant variables are $\phi$=PITCH,
                                                                     $w_{p}=$VSPD, and $V=$TASX. The radome measures the pressure difference
                                                                     AKRD between top and bottom ports on the radome, and this pressure
                                                                     is usually normalized by some measure of dynamic pressure like QCXC
                                                                     or QCRC. The former is preferable because the latter is sometimes
                                                                     affected by icing or freezing of accumulated water even when AKRD
                                                                     continues to function. 
                                                                     
                                                                     For the gust pod, the relevant variables are $\phi=$CPITCH\_GP, $w_{p}=$CVSPD\_GP,
                                                                     and $V=$TASX. The gust-pod measurements differ from those measured
                                                                     relative to the fuselage; for example, the pitch of the gust pod is
                                                                     several degrees different from that of the fuselage because of the
                                                                     way in which the gust-pod IRU is installed. However, the true airspeed
                                                                     $V$ in (\ref{eq:alphaWithwZero}) is measured better by the fuselage
                                                                     system, so TASX will be used for $V$. The equation with the appropriate
                                                                     variables is then:
                                                                       
                                                                       \begin{equation}
                                                                     \alpha^*=\mathrm{CPITCH\_GP}-\arcsin\frac{\mathrm{CVSPD\_GP}}{\mathrm{TASX}}\label{eq:AOAeq}
                                                                     \end{equation}
                                                                     
                                                                     
                                                                     Calibration of the angle-of-attack then requires determining a function
                                                                     $f(\{x_{i}\})$ of measured quantities that matches $\alpha^*$ determined
                                                                     from (\ref{eq:AOAeq}). Possible terms in that function $\{x_{i}\}$
                                                                       may include ADIFR and related measurements of pressure as well as
                                                                     Mach number, attitude angles of the pod, etc.
                                                                     
                                                                     For the Rosemount 858 sensor used with the gust pod, it is expected
                                                                     from theory that one element of $\{x_{i}\}$ will be ADIFR\_GP/QC\_GP.
                                                                     Wind tunnel and theoretical studies predict how the pressure will
                                                                     vary on a hemispheric surface with changing angles, but those don't
                                                                     necessarily apply to the mounting location on the GV because there
                                                                     is considerable flow distortion at the under-wing location of the
                                                                     pod and that affects the pressure response to changes in flow angles.
                                                                     Therefore, the best approach is to use the above approach for that
                                                                     sensor also and determine a functional response that matches the calibration
                                                                     data. 

                                                                     
<<Initialization,echo=FALSE,include=F>>=
require(Ranadu)
library(knitr)
# set global chunk options
opts_chunk$set(fig.path='figure/GP-', fig.align='center', fig.show='hold')
options(replace.assign=TRUE,width=49)
#' @title standardVariables
#' @description Standard set of variables for data.frame
#' @details Sets a standard list of variable names in VarList suitable for use in a call to getNetCDF. Optionally, add "list" to the variables.
#' @details The standard variables are ATX, DPXC, EWX, GGALT, LATC,m LONC, MACHX, MR, PALT, PSXC, QCSC, TASX, WDC, WSC, WIC.
#' @aliases standardVariables StandardVariables
#' @author William Cooper
#' @export standardVariables
#' @param list An optional list of variable names to add to the standard list
#' @examples 
#' standardVariables (c("WIC", "PLWCC"))
standardVariables <- function (list=NULL) {
  VarList <-c("ATX", "DPXC", "EWX", "GGALT", "LATC", "LONC", 
              "MACHX", "MR", "PALT", "PSXC", "QCXC", "TASX", 
              "WDC", "WSC", "WIC") 
  if (length(list) > 0) {
    VarList <- c(VarList, list)
  }  
  return (VarList)
}

#' @title getNetCDF
#' @description Loads selected variables in a specified RAF-aircraft data file into a data.frame.
#' @details 'Time' is converted to a POSIXcf variable, and other variables specified in a VarList list are included in the data.frame. By default, the entire file is loaded, but optional arguments Start and End limit the time range.
#' @details This routine handles 25-Hz files also, but the Start/End option does not work for those files. The returned variables are single-dimension, and for 25 Hz files Time is returned as a sequence with fractional-second values.
#' @details If you get a long list of variable names, it probably indicates that one of the specified variables is not in this netCDF file.
#' @aliases getNetCDF getnetcdf
#' @author William Cooper
#' @import "ncdf"
#' @export getNetCDF
#' @param fname string, full file name 'e.g., "/home/Data/PREDICT/PREDICTrf01.nc"
#' @param VarList vector of variable names to load from the netCDF file
#' @param Start An optional numeric giving the desired start time in HHMMSS format
#' @param End An optional numeric giving the desired end time in HHMMSS format
#' @param F An optional numeric entered in the data.frame as a column 'FNo' all set to this integer
#' @return data.frame containing the specified variables as columns, along with 'Time' and optionally the flight number 'FNo'
#' @examples 
#' \dontrun{D <- getNetCDF ("PathToFile.nc", c("Var1", "Var2", "Var3"))}
#' \dontrun{D <- getNetCDF ("PathToFile.nc", c("Var1", "Var2"), 133000, 143000, 5)}
getNetCDF <- function (fname, VarList, Start=0, End=0, F=0) {
# This function reads the netCDF file 'fname' and extracts 
# the variables specified in 'VarList', returning the
# results in a data.frame. It includes the flight number F
# in the data.frame, as variable RF. It converts "Time",
# seconds after a reference time in the netCDF files, to
# a POSIXct date/time variable.
  netCDFfile = open.ncdf(fname)
  NV <- length (VarList)
  Time <- get.var.ncdf (netCDFfile, "Time")
  DL <- length (Time)
  # Expand Time to be high-rate
  if ("sps25" %in% names(netCDFfile$dim)) {
    T <- vector ("numeric", 25*length(Time))
    for (i in 1:length(Time)) {
      for (j in 0:24) {
        T[(i-1)*25+j+1] <- Time[i]+0.04*j
      }  
    }
    Time <- T
  }
  time_units <- att.get.ncdf (netCDFfile, "Time", "units")
  tref <- sub ('seconds since ', '', time_units$value)
  Time <- as.POSIXct(as.POSIXct(tref, tz='UTC')+Time, tz='UTC')
  # see if limited time range wanted:
  #i1 <- ifelse ((Start != 0), getIndex (Time, Start), 1)
  #i2 <- ifelse ((End != 0), getIndex (Time, End), length(Time))
  #r <- i1:i2
  #Time <- Time[r]
  #print(c("time range: ",i1,i2))
  SE <- getStartEnd (Time)
  print (c("File Times: From ", format(Time[1]), " to ", 
         format(Time[length(Time)])))
  d <- data.frame(Time)
  
  for (i in 1:length(VarList)) {
    X <- (get.var.ncdf(netCDFfile, VarList[i]))
    if ("sps25" %in% names(netCDFfile$dim)) {
      DM <- length(dim(X))
      if (DM == 2) {    # flatten
        dim(X) <- dim(X)[1]*dim(X)[2]
#       d[VarList[i]] <- X[r]
        d[VarList[i]] <- X
      } else {
        T <- vector ("numeric", 25*DL)
        for (k in 1:(DL-1)) {
          if ((is.na(X[k])) | (X[k] == -32767)) {
            for (j in 1:25) {
              T[(k-1)*25+j] <- -32767
            }
          } else {
            for (j in 0:24) {
              T[(k-1)*25+j+1] <- X[k]+0.04*j*(X[k+1]-X[k])
            }
          }
        }
        k <- DL
        for (j in 0:24) {
          T[(k-1)*25+j+1] <- X[k]
        }      
#       d[VarList[i]] <- T[r]
        d[VarList[i]] <- T
      }
    } else {
      d[VarList[i]] <- X
    }
  }

  if (F != 0) {    # if specified, include the flight number
    RF <- rep (F, times=length(Time))    # label flight number
    #d["RF"] <- RF[r]
    d["RF"] <- RF
  }
  close.ncdf (netCDFfile)
  d[d == -32767.] <- NA   # replace missing-value with NA
  return (d)
}


Flight <- "rf15"        # this was the flight with cal maneuvers
fname = sprintf("/Data/DEEPWAVE/DEEPWAVE%s.nc", Flight)
VarNames <- c("VYC","GGALT","LATC", "LONC", "PSXC", "QCXC",
              "WDC", "WSC", "GGVEW", "GGVNS", "VEW", "VNS", "TASX",
              "ADIFR", "AKRD", "SSLIP", "PITCH", 
              "ROLL", "THDG", "BDIFR", "EWX",
              "ADIFR_GP", "BDIFR_GP", "PS_GP", "QC_GP",
              "CROLL_GP", "CPITCH_GP", "CTHDG_GP", "WIC",
              "CVNS_GP", "CVEW_GP", "VSPD", "CVSPD_GP",
              "ATX")
D <- getNetCDF (fname, VarNames)      # this handles high-rate data also
Flight <- "rf11"        # this had  cal maneuvers at 40K ft
fname = sprintf("/Data/DEEPWAVE/DEEPWAVE%s.nc", Flight)
D2 <- getNetCDF (fname, VarNames)
r4 <- setRange (D2$Time, 103000,104000)
D2 <- D2[r4,]
Flight <- "rf16"        # 43000-ft leg
fname = sprintf("/Data/DEEPWAVE/DEEPWAVE%s.nc", Flight)
D3 <- getNetCDF (fname, VarNames)
r5 <- setRange (D3$Time, 94000,110000)
D3 <- D3[r5,]
Flight <- "rf14"        # 45000-ft leg
fname = sprintf("/Data/DEEPWAVE/DEEPWAVE%s.nc", Flight)
D4 <- getNetCDF (fname, VarNames)
r6 <- setRange (D4$Time, 113000,122000)
D4 <- D4[r6,]
capnF1 <- "The angle-of-attack determined from the fit, as a function of the reference angle provided by Equation (3), for the combination of data from all three speed runs as listed in the text."

@

The best method for calibrating angle-of-attack is through the use
of speed runs. In this maneuver, the aircraft is slowed to a speed
near the lower range of its operating range, then accelerated to near
the upper limit, and then slow again to normal cruise. If this is
done while flying a level track, the angle of attack will very through
its normal range and the pitch will vary similarly. If there is no
vertical wind or if a fluctuating vertical wind averages to zero,
(\ref{eq:alphaWithwZero}) then can be used to provide a reference
angle $\alpha$ for calibration. There were three speed runs during
RF15, at the times 3:21--3:29, 4:15--4:23, and
5:01--5:11 UTC. On RF11, there was a similar speed run flown from 10:30--10:40. For the purpose of this calibration of angle-of-attack,
only those periods were used. In addition, because some of the measurements
at minimum speed deviated from the otherwise simple fits, only measurements with true airspeed
in excess of 130 m/s were used; this eliminated some of the slowest
parts of the speed runs, but that is a flight speed not used in normal
operation.

In the following code, the line

AOAREF~<-~PITCH~-~asin(VSPD/TASX)~/~Cradeg

represents Eq.~(\ref{eq:alphaWithwZero}). The Mach number is used
in the fit along with the standard pressure ratio ADIFR/QCXC and some
other trial functions. The resulting fit was as follows:

\begin{equation}
\alpha=c_{0}+c_{1}\frac{\Delta p_{\alpha}}{q}+c_{2}\frac{q}{p}+c_{3}M\label{eq:AOAfunction}
\end{equation}

Here $\Delta P_{\alpha}$ is the pressure difference between vertically
displaced ports on the radome, measured as the variable ADIFR, $q$
is the dynamic pressure measured as QCXC, $p$ is the ambient or static
pressure measured as PSXC, and $M$ is the Mach number (calculated
from $q$ and $p$ here neglecting the effect of moisture). A plot
of the results of this formula is compared to the reference data used
in the fit in the figure below. The square of the correlation is 9.==0.99 and the residual scatter about the fit is 0.12$^{\circ}$. 

<<AOA-fit-and-plot, fig.cap="The angle-of-attack determined from the fit.",out.width="300pt",fig.align="center", echo=F>>=
r1 <- setRange (D$Time, 32100,32900)
r2 <- setRange (D$Time, 41500,42300)
r3 <- setRange (D$Time, 50100,51100)
# need to add high-altitude segment also to constrain fit:
# rf11 103000--104000 is a speed run at 40,000 ft.
# useful also to include some data from max altitude:
r <- c(r1,r2,r3)
DD <- merge(D2, D4, all=T)
DD <- merge(DD, D[r,], all=TRUE)
Data <- merge (DD, D3, all=TRUE)
Data <- merge (D2, D[r,], all=T)
Valid <- (Data$TASX > 130.)
Data <- Data[Valid,]
attach(Data)
Cradeg <- pi / 180.
Mach <- MachNumber (PSXC, QCXC)  # uses conventional q, p
AOAREF <- PITCH - asin(VSPD/TASX) / Cradeg
AQR <- ADIFR/QCXC # basic pressure ratio for AOA
RR2 <- QCXC/PSXC    # q/p ratio
#plot (AOAREF, AKRD, pch=16, cex=0.7, col='blue')
#fm <- lm (AOAREF~AQR+RR2+PS_GP+QC_GP+Mach)
fm <- lm (AOAREF~AQR+RR2+Mach)
cf3 <- coefficients (fm)
#print(c("Fit coefficients are: ",cf3))
print(summary(fm))
A2 <- cf3[1]+cf3[2]*AQR+cf3[3]*RR2+cf3[4]*Mach
plot (AOAREF, A2, xlab="Predicted AOA [deg.]", 
         ylab="Fit AOA [deg.]", type='p', pch=16, cex=0.7, col='blue')
lines (c(-3.,6.), c(-3.,6.), lty=2, lwd=3, col='orange')
title("Radome")
capnF2 <- "As for Fig. X but for the gust pod."

@


A similar approach was taken for the gust pod. In this case, the fit
obtained also had the form of (\ref{eq:AOAfunction}) but with variables
translated to apply to the gust-pod instead of the radome: $\Delta P_{\alpha}=$ADIFR\_GP,
$q=$QC\_GP, $p=$PS\_GP, but $M$ remained as determined from the
pitot tube and static ports of the main aircraft data system. The square of the correlation was 0.99 and the residual scatter (residual standard error) was 0.10$^{\circ}$.

<<AOA-gust-pod,fig.cap=capnF2,out.width="300pt",fig.align="center", echo=F>>=
AOAREF_GP <- CPITCH_GP - asin(CVSPD_GP/TASX) / Cradeg
AQR_GP <- ADIFR_GP/QC_GP # basic pressure ratio for AOA
RR2_GP <- QC_GP/PS_GP    # q/p ratio from the gust pod
#fm <- lm (AOAREF~AQR+RR2+PS_GP+QC_GP+Mach)
fm_GP <- lm (AOAREF_GP~AQR_GP+RR2_GP+Mach)
cf3_GP <- coefficients (fm_GP)
#print(c("Fit coefficients are: ",cf3_GP))
print(summary(fm_GP))
A2_GP <- cf3_GP[1]+cf3_GP[2]*AQR_GP+cf3_GP[3]*RR2_GP+cf3_GP[4]*Mach
plot (AOAREF_GP, A2_GP, xlab="Predicted AOA [deg.]", 
         ylab="Fit AOA [deg.]", type='p', pch=16, cex=0.7, col='blue')
lines (c(-3.,6.), c(-3.,6.), lty=2, lwd=3, col='orange')
title ("Gust Pod")
capnF3 <- "The sideslip attack determined from the fit, as a function of the reference angle provided by Equation (6), for the combination of data from all three yaw maneuvers listed in the text."

@


\section*{Calibration of the Sideslip Angle}

Calibration of the sideslip angle is more difficult, both because
the equations are more complicated and because the maneuver is very
hard to fly. Ideally, the sideslip maneuver should only change yaw
angle and heading without change in roll, altitude, or angle-of-attack,
but that is impossible. It is practical, however, to minimize roll
and change in altitude, and that was how these maneuvers were flown.
The three sets of yaw maneuvers were at these times: 3:32:00--3:35:30,
4:31:00--4:33:30, and 5:26:40--5:29:30 UTC. In the case of yaw maneuvers,
the calibration is based on the expectation that the horizontal wind
remains constant. The first-order equations for the east and north
components of the wind, $u$ and $v$, are:

\begin{eqnarray}
u & = & -U_{a}\sin(\Psi+\beta)+u_{p}\nonumber \\
v & = & -U_{a}\cos(\Psi+\beta)+v_{p}\label{eq:horizWindeqs}
\end{eqnarray}
where $U_{a}$ is the true airspeed, $\Psi$ the heading, $\backslash beta$
the sideslip angle, and $u_{p}$ and $v_{p}$ are the eastward and
northward ground-speed components of the aircraft. This two equations
lead to the following reference formula for $\beta$:

\begin{equation}
\beta^{*}=-\Psi+\arctan\left(\frac{u_{p}-u}{v_{p}-v}\right)\label{eq:beta-equation}
\end{equation}
where the second term represents a correction for the change in direction
of motion of the aircraft, which is difficult to avoid in the yaw
maneuver. The measurements thus provide $\beta^{*}$, an estimate
of the sideslip during the yaw maneuvers.


For both systems, a relatively simple fit was sufficient, in the following
form:

\begin{equation}
\beta=e_{0}+e_{1}\frac{\Delta p_{\beta}}{q}\label{eq:betaFunctionForm}
\end{equation}
where $\Delta p_{\beta}$ is the pressure difference between horizontally
separated pressure ports and $q$ the dynamic pressure. For the radome,
$\Delta p_{\beta}=$BDIFR and $q=$QCXC; for the gust-pod, $\Delta p_{\beta}=$BDIFR\_GP
and $q=$QC\_GP. The result from the calibration is shown in Fig.\ 3 below. For the radome system, the square of the correlation was above 0.99 and the residual standard error was 0.09$^{\circ}$.
<<sideslip,fig.cap=capnF3,out.width="300pt",fig.align="center", echo=F>>=
# sideslip calibration:

detach(Data)
r1 <- setRange (D$Time, 33230,33500)
r2 <- setRange (D$Time, 43100,43300)
r3 <- setRange (D$Time, 52640,52930)
r <- c(r1,r2,r3)
#r <- r1
Data <- D[r,]
Valid <- (Data$TASX > 130.)
Data <- Data[Valid,]
attach(Data)
Hmean <- mean(THDG)
u <- -1. * WSC * sin (WDC*Cradeg)
v <- -1. * WSC * cos (WDC*Cradeg)
SSREF <- -THDG + atan2((VEW-u), (VNS-v))/ Cradeg
SSREF[SSREF < -180.] <- SSREF[SSREF < -180.] + 360.
#plot (SSREF, SSLIP, pch=16, cex=0.6,col='blue')
BQR <- BDIFR / QCXC
sfm <- lm(SSREF~BQR)
summary(sfm)
cfs <- coefficients(sfm)
#print(c("Fit coefficients are: ",cfs))
print(summary(sfm))
S2 <- cfs[1] + cfs[2] * BQR
plot (SSREF, S2, pch=16, cex=0.6, col='blue',
      xlab="SS Reference", ylab="SSLIP from fit")
lines(c(-2.,2.), c(-2.,2.), col='orange', lty=2, lwd=3)
title ("Radome")
capnF4 <- "As in the preceding figure but for the gust-pod system."

@
For the gust-pod, the same approach was followed, giving a fit with squared correlation of 0.96 and a residual standard error of 0.13$^{\circ}$.
<<sideslip-gust-pod,fig.cap=capnF4,out.width="300pt",fig.align="center", echo=F>>=
SSREF_GP <- -CTHDG_GP + atan2((CVEW_GP-u), (CVNS_GP-v))/ Cradeg
SSREF_GP[SSREF_GP < -180.] <- SSREF_GP[SSREF_GP < -180.] + 360.
#plot (SSREF_GP, SSLIP, pch=16, cex=0.6,col='blue')
BQR_GP <- BDIFR_GP / QC_GP
Mach <- MachNumber (PSXC, QCXC)
#sfm_GP <- lm(SSREF_GP~BQR_GP)
RR2_GP <- QC_GP / PS_GP
sfm_GP <- lm(SSREF_GP~BQR_GP)
summary(sfm_GP)
cfs_GP <- coefficients(sfm_GP)
S2_GP <- cfs_GP[1] + cfs_GP[2] * BQR_GP #+ cfs_GP[3] * RR2_GP + cfs_GP[4] * Mach
plot (SSREF_GP, S2_GP, pch=16, cex=0.6, col='blue',
      xlab="SS Reference", ylab="SSLIP from fit")
lines(c(-2.,2.), c(-2.,2.), col='orange', lty=2, lwd=3)
title ("Gust Pod")
detach(Data)

@

\vfill\eject
\section*{Summary of Calibrations: Angle-of-Attack and Sideslip}


Angle of Attack: Eq.~(6)\hskip6cm Sideslip: Eq.~(9)

\begin{tabular}{|c|c|c|c|c|}
\hline 
System & $c_{0}$ & $c_{1}$ & $c_{2}$ & $c_{3}$\tabularnewline
\hline 
\hline 
Radome & 2.5292 & 21.923 & -6.1086 & 6.05801\tabularnewline
\hline 
Gust Pod & -2.1669 & 5.2056 & -7.2058 & 4.9131\tabularnewline
\hline 
\end{tabular}~~~~~%
\begin{tabular}{|c|c|c|}
\hline 
System & $e_{0}$ & $e_{1}$\tabularnewline
\hline 
\hline 
Radome & 0.0000 & 21.335\tabularnewline
\hline 
Gust Pod & -3.4983 & 11.443\tabularnewline
\hline 
\end{tabular}


\section*{Application to the Gust Pod}


\subsection*{The Components of the Relative Wind}

The gust pod is a new wind-sensing system so it is useful to document how the measurements are handled. The probe itself has five pressure-sensing holes located on a hemispheric cap pointed into the wind. The pressure difference between the two ports located upward and downward from centerline, measured as ADIFR\_GP, is used in the calculation of angle-of-attack. The similar pressure difference between the two ports located toward starboard and toward port of centerline, measured as BDIFR\_GP, are used in the calculation of sideslip. In addition, the probe has static ports located on the side of the cylinder carrying the hemispheric cap, and the difference between the pressure at the forward port and that at the static ports is measured as the dynamic pressure QC\_GP. The static pressure is also measured, as PS\_GP.

In addition, there is an inertial reference unit mounted with the gust pod to measure its attitude angles (roll, pitch, heading) and to measure the three components of motion of the aircraft relative to the Earth. This unit receives GPS information and uses it to update its measurements via a Kalman filter.

The measurements ADIFR\_GP and BDIFR\_GP, normalized by QC\_GP, are used with the calibrations in the preceding section to find the angle-of-attack and sideslip. In addition, to find the relative wind, a measurement of true airspeed (TAS) is needed. In an effort to allow the gust-pod system to operate independently of the standard radome-based system, it is desirable to determine the true airspeed directly from the gust-pod measurements. However, the standard system has been calibrated to low uncertainty by reference to the Laser Air Motion Sensor, so for the purpose of calibration that true airspeed (TASX) will be used as a reference. Once the gust-pod measurement of true airspeed is calibrated, the gust-pod system still measures wind without future reference to the standard system, but the calibration process links the two systems to have a common reference for TAS. 

Therefore, the next step needed to use the gust pod wind-sensing system is to determine a functional relationship between gust-pod measurements and the true airspeed. The approach taken is to fit the basic pressure ratio $q/p$ as measured by the 858 probe
to match the corresponding pressure ratio provided by the
conventional measurements of dynamic and static pressure. The relationship represents the true ratio of dynamic to static pressure, so using that ratio the normal calculation of true airspeed can be used to determine the TAS measured by the gust pod. For this purpose, all the measurements from the calibration flight (RF15) were used qualified only by requiring TASX>130 m/s.  

The measurements entering the resulting fit are as follows: $q$=QCXC
is the reference dynamic pressure, $p=$PSXC is the reference ambient
pressure, $q_{g}=$QC\_GP is the gust-pod dynamic pressure, $p_{g}$=PS\_GP
is the gust-pod static pressure, $M$ is the Mach number, and $\Delta P_{\alpha,g}$=ADIFR\_GP
is the pressure difference between top and bottom pressure ports on
the gust-pod sensor. The resulting fit is given by the following formula,
with coefficients \{b\}=\{-0.07791, -1.1571, 2.6691, -1.3588, -0.0046686,
0.53110\}:

\begin{equation}
\frac{q}{p}=b_{0}+b_{1}\frac{q_{g}}{p_{g}}+b_{2}M\frac{q_{g}}{p_{g}}+b{}_{3}\left(\frac{q_{g}}{p_{g}}\right)^{2}+b_{3}\frac{\Delta p_{\alpha,g}}{q_{g}}+b_{5}M\label{eq:TASfit}
\end{equation}


This complex fit was required to give a good representation of the
measured ratio QCXC/PSXC, and a low-uncertainty fit is desirable because
the true airspeed has very low potential uncertainty. All terms tested
to be significant, and they were needed to reduce the residual error
in $q/p$ to about 0.0001. The details of the fit and a plot comparing the result to the reference are shown below:

<<TAS-from-the-gust-pod-1,fig.cap="Standard measurements QCPC/PSXC plotted vs QCPC-GP/PS-GP as measured by the gust pod",out.width="300pt", fig.align="center",echo=F>>=

# for this purpose, use all measurements from the cal flight that had TASX>130:
Data <- D
Valid <- (Data$TASX > 130.)
Data <- Data[Valid,]
attach(Data)
B1 <- QCXC/PSXC
B2 <- QC_GP/PS_GP
AQR_GP <- ADIFR_GP/QC_GP # basic pressure ratio for AOA
RR2_GP <- QC_GP/PS_GP    # q/p ratio from the gust pod
Mach <- MachNumber(PSXC,QCXC)
# B2 and AQR are based only on the gust-pod measurements
#fm4 <- lm(B1~B2+I(B2^2)+AQR_GP)
BxM <- B2*Mach
fm4 <- lm(B1~B2+BxM+I(B2^2)+AQR_GP+Mach)
cf4 <- coefficients (fm4)
#print (c("fit coefficients for TAS:", cf4))
print(summary(fm4))
#B3 <- cf4[1]+cf4[2]*B2+cf4[3]*B2**2+cf4[4]*AQR_GP
B3 <- cf4[1]+cf4[2]*B2+cf4[3]*BxM+cf4[4]*B2**2+cf4[5]*AQR_GP+cf4[6]*Mach

# B3 is the deduced pressure ratio to use when calculating TAS
plot (B1, B3, xlab="Standard q/p", ylab="gust-probe q/p", xlim=c(0.1,0.6), ylim=c(0.1,0.6), pch=16, cex=0.7, col='blue')
lines (c(0., 1.), c(0.,1.), lwd=3, lty=2, col='orange')
capn2 <-"True airspeed obtained from the gust pod, plotted against corresponding measurements from the conventional measurement system (TASX)" 
@
With this result, the true airspeed can be obtained using the usual formula:

\begin{equation}
V=\sqrt{2\left(\frac{(c_{p}-R_{a}}{R_{a}}\right)\left(1+\frac{q}{p}\right)^{\frac{R_{a}}{c_{p}}-1}\left(\frac{c_{p}}{c_{v}}R_{a}T\right)}\label{eq:TASformula}
\end{equation}

where $c_{p}$, $c_{v}$, and $R_{d}$ are the specific heat of air
at constant pressure, the specific heat of air at constant volume,
and the gas constant for air and $p$ is the static pressure, $q$
the dynamic pressure, and $T$ the absolute temperature.
The resulting true airspeed is compared to the conventional measurement in the next plot. The fit provides a very good representation of TASX, with a standard error of less than 0.1 m/s.

<<TAS-from-the-gust-pod-2,fig.cap=capn2, out.width="300pt", fig.align="center",echo=F>>=
# Vg will be the TAS based only on the gust pod
Vg <- TrueAirspeed (MachNumber (PS_GP, PS_GP*B3, EWX), ATX)
plot(TASX, Vg, xlab="TASX [m/s]", ylab="TAS, gust pod [m/s]",
     xlim=c(200.,240.), ylim=c(200.,240.),pch=16, cex=0.7, 
     col='blue')
lines (c(100.,300.), c(100.,300.), lty=2, col='orange')
sd(TASX-Vg, na.rm=TRUE)
sd((TASX-Vg)[abs(VSPD) < 2], na.rm=TRUE)

@


In the standard coordinate system with $x$ forward, $y$ starboard,
and $z$ downward, the three corresponding components of the relative
wind are then:

%\[
\begin{equation}
\mathbf{v}=\left(\begin{array}{c}
u_{r}\\v_{r}\\w_{r}\end{array}\right)=\left(\begin{array}{c}V\\V\thinspace\tan\beta\\
V\thinspace\tan\alpha\end{array}\right)\label{eq:relative wind}\end{equation}
%\]

where $V$ is the true airspeed (10), $\alpha$ is the angle of attack
and $\beta$ is the sideslip angle. The latter are determined from the measured quantities according to the formulas (6) and (9), respectively. The sign convention is such that
the relative wind is positive when \emph{from }the direction of the
axis for each component. 

With true airspeed $V$ as calculated above from (\ref{eq:TASformula}), (\ref{eq:relative wind}) with
appropriate values for angle of attack and sideslip will give the
relative wind.

The next steps are then needed to convert the relative wind into Earth-relative wind components and produce new variables representing the wind measured by the gust probe.


\subsection*{Transformation to an Earth Reference Frame}

The gust-pod orientation is measured by an IRU in the pod, while the
aircraft orientation is measured by a fuselage-mounted IRS. Each measures
heading, pitch, and roll. There are again two alternate paths that
can be followed: Transform to the aircraft reference frame and use
the standard software (gusto.c), or transform to an Earth reference
frame directly and use the gust-pod ground speeds to obtain the wind.
The former takes advantage of the higher-quality IRU in the cabin,
but involves additional complications arising from contributions of
angular velocity of the aircraft and mis-alignment between the inertial
systems. The latter course will be followed here, but it may be worth
exploring if the former might give higher-quality measurements.

The required transformation is described by three rotation matrices,
defined in Bulletin 23 Eqs. 2.5 and 2.6:

\[
T_{1}=\left(\begin{array}{ccc}
1 & 0 & 0\\
0 & \cos\phi & -\sin\phi\\
0 & \sin\phi & \cos\phi
\end{array}\right)
\]


\[
T_{2}=\left(\begin{array}{ccc}
\cos\theta & 0 & \sin\theta\\
0 & 1 & 0\\
-\sin\theta & 0 & \cos\theta
\end{array}\right)
\]


\[
T_{3}=\left(\begin{array}{ccc}
\cos\psi & -\sin\psi & 0\\
\sin\psi & \cos\psi & 0\\
0 & 0 & 1
\end{array}\right)
\]


where \{$\phi,\,\theta,\,\psi$\} are \{roll, pitch, heading\}.

The transformation should be made in the following order: 
\begin{enumerate}
\item Rotate by $T_{1}$ using the roll angle $\phi^{\prime}$ measured
by the gust-pod IRU (CROLL\_GP) to level the wings by a rotation about
the x axis. 
\item Rotate by $T_{2}$ using the pitch angle $\theta^{\prime}$ (CPITCH\_GP)
to level the aircraft by a rotation about the y axis.
\item Rotate by $T_{3}$ using the heading angle $\psi^{\prime}$ (CTHDG\_GP)
to obtain components in a true-north reference frame. At this point,
the relative-wind vector in an Earth-reference coordinate system is
$\mathbf{v}_{r}=T_{3}(T_{2}(T_{1}\mathbf{v}))$ where $\mathbf{v}$
is given by (\ref{eq:relative wind}).
\end{enumerate}
At this point, the measured ground-speeds of the gust pod can be added
to the relative wind to get the true Earth-relative wind. The final
equations. defining new wind variables \{WDG, WSG, WIG\} corresponding
to \{WDC, WSC, WIC\} from the radome gust system, are:

\begin{equation}
\mathbf{v}_{g}=\mathbf{v}_{r}+\left(\begin{array}{c}
-\mathrm{CVNS\_GP}\\
-\mathrm{CVEW\_GP}\\
\mathrm{CVSPD\_GP}
\end{array}\right)\label{eq:vg}
\end{equation}
\begin{equation}
\mathrm{WDG=\arctan2(v_{g,y},}v_{g,x})\label{eq:wd}
\end{equation}
\begin{equation}
\mathrm{WSG=\sqrt{(v_{g,x}^{2}+v_{g,y}^{2})}}\label{eq:ws}
\end{equation}
\begin{equation}
\mathrm{WIG=v_{g,z}}\label{eq:wi}
\end{equation}

The R code that performs these calculations is embedded in the script that produced this memo and is called Calibration.Rnm. It will now use the calibrations of the gust pod to process the data file from RF05, as an example, in order to obtain wind measurements from the gust pod for comparison to those from the radome-based system. Measurements at 25 Hz will be used so that a possible phase shift between the two measurements can be studied.

<<Relative-Wind-Code,echo=F,include=F>>=

# now get the relative wind components
detach(Data)
Flight <- "rf05"
fname = sprintf("/Data/DEEPWAVE/DW%shrx.nc", Flight)
# copy to a new file before adding variables to it:
fnew = sprintf("/Data/DEEPWAVE/DW%shr_GP.nc", Flight)
system(paste ("cp", fname, fnew, sep=' '), wait=TRUE)
# VarNames specifies a subset of the netCDF variables to
# use in this run:
VarNames <- c("VYC","GGALT","LATC", "LONC", "PSXC", "QCXC",
        "WDC", "WSC", "GGVEW", "GGVNS", "VEW", "VNS", "TASX",
        "AKRD", "SSLIP", "PITCH", "ROLL", "THDG", 
        "ADIFR_GP", "BDIFR_GP", "PS_GP", "QC_GP",
        "CROLL_GP", "CPITCH_GP", "CTHDG_GP", "WIC",
        "CVNS_GP", "CVEW_GP", "VSPD", "CVSPD_GP",
        "ATX")
Data <- getNetCDF (fnew, VarNames)
attach(Data)
B2 <- QC_GP/PS_GP
AQR_GP <- ADIFR_GP/QC_GP # basic pressure ratio for AOA
RR2_GP <- QC_GP/PS_GP    # q/p ratio from the gust pod
BQR_GP <- BDIFR_GP / QC_GP
Mach <- MachNumber(PSXC,QCXC)
# B2 and AQR_GP are based only on the gust-pod measurements
BxM <- B2*Mach
#embed and fossilize cf3+GP, cfs_GP, cf4 for future use:
#cf3_GP <- c(-2.166904, 5.205568, -7.205783, 4.913143)
cf3_GP <- c( -2.125395, 5.592043, -4.383710, 3.926719 )
cfs_GP <- c(-3.498321, 11.443376)
cf4 <- c(-0.07790608, -1.15714339,  2.66908967, -1.35880409, -0.00466856,  0.53110059)
B3 <- cf4[1]+cf4[2]*B2+cf4[3]*BxM+cf4[4]*B2**2+cf4[5]*AQR_GP+cf4[6]*Mach
Vg <- TrueAirspeed (MachNumber (PS_GP, PS_GP*B3), ATX)
A2_GP <- cf3_GP[1]+cf3_GP[2]*AQR_GP+cf3_GP[3]*RR2_GP+cf3_GP[4]*Mach
S2_GP <- cfs_GP[1] + cfs_GP[2] * BQR_GP #+ cfs_GP[3] * RR2_GP + cfs_GP[4] * Mach
# dataframe for the relative wind:
d <- data.frame("U_RW"=Vg)
d["V_RW"] <- Vg * tan (S2_GP * Cradeg)
d["W_RW"] <- Vg * tan (A2_GP * Cradeg)
@


<<Rotation-matrices,echo=F,include=F>>=

rw <- as.matrix(d)
cosphi <- cos (CROLL_GP * Cradeg)
sinphi <- sin (CROLL_GP * Cradeg)
costheta <- cos (CPITCH_GP * Cradeg)
sintheta <- sin (CPITCH_GP * Cradeg)
cospsi <- cos (CTHDG_GP * Cradeg)
sinpsi <- sin (CTHDG_GP * Cradeg)
DL <- length(TASX)
One <- rep (1, DL)
Z <- rep (0, DL)
T1 <- array (c(One,Z,Z,Z,cosphi,-sinphi,Z,sinphi,cosphi), 
             dim=c(DL,3,3))
T2 <- array (c (costheta,Z,sintheta,Z,One,Z,-sintheta,Z,costheta),
             dim=c(DL,3,3))
T3 <- array (c (cospsi,-sinpsi,Z,sinpsi,cospsi,Z,Z,Z,One),
             dim=c(DL,3,3))
@

The code also attempts to flag bad CTHDG\_GP measurements,
which apparently occur as the heading moves through 180 deg,
by setting them to the standard missing-value number.
This would be better replaced by interpolation at these points.

<<Calculate-new-wind-variables-WDG-WSG-WIG,echo=F,include=F>>=

WDG <- vector ("numeric", DL)
WSG <- vector ("numeric", DL)
WIG <- vector ("numeric", DL)
Hlast <- 0.
for (i in 1:DL) {
  rwx <- matrix(rw[i,], 3, 1)
  Y1 <- aperm(T1[i,,]) %*% matrix (rw[i,], 3, 1)
  Y2 <- aperm(T2[i,,]) %*% Y1
  Y3 <- aperm(T3[i,,]) %*% Y2
  WG <- matrix (c(-CVNS_GP[i], -CVEW_GP[i], CVSPD_GP[i]), 
                3, 1)
  Y4 <- Y3 + WG
  WDG[i] <- atan2 (Y4[2], Y4[1]) / Cradeg
  if ((!is.na(WDG[i])) & (WDG[i] < 0.)) {
    WDG[i] <- WDG[i] + 360.
  }
  WSG[i] <- sqrt (Y4[1]**2 + Y4[2]**2)
  WIG[i] <- Y4[3]
           # attempt to flag bad CTHDG_GP points as missing
  if (!is.na(CTHDG_GP[i])) {
    if ((abs(CTHDG_GP[i]-Hlast) > 3.) 
                             & (abs(Hlast-180.) < 5.)) {
      WIG[i] <- NA
      WDG[i] <- NA
      WSG[i] <- NA
    }
  } else {
    WIG[i] <- NA
    WDG[i] <- NA
    WSG[i] <- NA    
  }
  if (!is.na(CTHDG_GP[i])) {
    Hlast <- CTHDG_GP[i]
  }
}
capn3 <- "WIG (vertical wind based on the gust pod) plotted against WIC (vertical wind from the conventional radome-based gust system)"
@


The code also adds the new variables to the netCDF file and the file is written when closed. This is the end of the processing.


<<Add-WIG-WDG-WSG-to-the-netCDF-file,echo=F,include=F>>=
# add new variables to the netCDF file:

netCDFfile <- open.ncdf (fnew, write=TRUE)

if ("sps25" %in% names(netCDFfile$dim)) {
  dim(WIG) <- c(25, dim(TASX)/25)
  dim(WSG) <- c(25, dim(TASX)/25)
  dim(WDG) <- c(25, dim(TASX)/25)

  varWIG <- var.def.ncdf ("WIG", "m/s", 
            c(netCDFfile$dim["sps25"], 
              netCDFfile$dim["Time"]), -32767.,
            "Vertical wind based on measurements from the gust pod")
  varWDG <- var.def.ncdf ("WDG", "deg.", 
            c(netCDFfile$dim["sps25"],
              netCDFfile$dim["Time"]), -32767.,
            "Wind direction based on measurements from the gust pod")
  varWSG <- var.def.ncdf ("WSG", "m/s", 
          c(netCDFfile$dim["sps25"],
            netCDFfile$dim["Time"]), -32767.,
          "Wind speed based on measurements from the gust pod")
} else {
  varWIG <- var.def.ncdf ("WIG", "m/s", 
            netCDFfile$dim["Time"], -32767.,
            "Vertical wind based on measurements from the gust pod")
  varWDG <- var.def.ncdf ("WDG", "deg.", 
            netCDFfile$dim["Time"], -32767.,
            "Wind direction based on measurements from the gust pod")
  varWSG <- var.def.ncdf ("WSG", "m/s", 
          netCDFfile$dim["Time"], -32767.,
          "Wind speed based on measurements from the gust pod") 
}
newfile <- var.add.ncdf (netCDFfile, varWIG)
newfile <- var.add.ncdf (newfile, varWDG)
newfile <- var.add.ncdf (newfile, varWSG)
put.var.ncdf (newfile, "WIG", WIG)
put.var.ncdf (newfile, "WDG", WDG)
put.var.ncdf (newfile, "WSG", WSG)
close.ncdf (newfile)

detach(Data)
rm(WIG, WDG, WSG)

@

Here are some plots that show the results. 


<<Plotted-Results-1, fig.cap=capn3, out.width="300pt", fig.align="center", echo=F,include=F>>=
# optionally, read the data back in. This is so that the later chunks can be run without need for reprocessing, which takes 20 min or so.
Flight <- "rf05"        # this was the flight with cal maneuvers
fnew = sprintf("/Data/DEEPWAVE/DW%shr_GP.nc", Flight)
fnew = sprintf("/Data/DEEPWAVE/DW%shr_save.nc", Flight)
VarNames <- c("VYC","GGALT","LATC", "LONC", "PSXC", "QCXC",
              "WDC", "WSC", "GGVEW", "GGVNS", "VEW", "VNS", "TASX",
              "ADIFR", "AKRD", "SSLIP", "PITCH", 
              "ROLL", "THDG", "BDIFR", "EWX",
              "ADIFR_GP", "BDIFR_GP", "PS_GP", "QC_GP",
              "CROLL_GP", "CPITCH_GP", "CTHDG_GP", "WIC",
              "CVNS_GP", "CVEW_GP", "VSPD", "CVSPD_GP",
              "ATX", "WIG", "WDG", "WSG")
VarNames <- c("VYC","GGALT","LATC", "LONC", "PSXC", "QCXC",
        "WDC", "WSC", "GGVEW", "GGVNS", "VEW", "VNS", "TASX",
        "AKRD", "SSLIP", "PITCH", "ROLL", "THDG",
        "ADIFR_GP", "BDIFR_GP", "PS_GP", "QC_GP",
        "CROLL_GP", "CPITCH_GP", "CTHDG_GP", "WIC",
        "CVNS_GP", "CVEW_GP", "VSPD", "CVSPD_GP",
        "ATX", "WIG", "WDG", "WSG")
Data <- getNetCDF (fnew, VarNames) 
Valid <- ((Data$TASX > 130.) & (abs (Data$ROLL) < 10.) &
                 (abs(Data$VSPD) < 3))
Data <- Data[Valid,]     # create a new dataframe with only valid data
attach(Data)          
plot (WIC, WIG, ylab="WIG (gust pod vertical wind, m/s)",
      xlim=c(-5.,5.), ylim=c(-5.,5.),
      xlab="WIC, standard vertical wind [m/s]", pch=16, 
      cex=0.7, col='blue')
lines (c(-5.,5.), c(-5.,5.), lty=2, lwd=2, col='orange')
print (mean (WIG-WIC, na.rm=TRUE))
print (sd (WIG-WIC, na.rm=TRUE))
# text (1.,-3.5, "mean WIG-WIC: -0.21 m/s\nst dev 0.25 m/s")
capn4 <- "Angle of attack determined from gust-pod measurements, plotted vs. corresponding measurements AKRD from the standard wind sensing system"
@

<<Plotted-Results-2, fig.cap=capn4, out.width="300pt", fig.align="center", echo=F>>=
B2 <- QC_GP/PS_GP
AQR_GP <- ADIFR_GP/QC_GP # basic pressure ratio for AOA
RR2_GP <- QC_GP/PS_GP    # q/p ratio from the gust pod
BQR_GP <- BDIFR_GP / QC_GP
Mach <- MachNumber(PSXC,QCXC)
# B2 and AQR_GP are based only on the gust-pod measurements
BxM <- B2*Mach
#embed and fossilize cf3+GP, cfs_GP, cf4 for future use:
#cf3_GP <- c(-2.166904, 5.205568, -7.205783, 4.913143)
cf3_GP <- c( -2.125395, 5.592043, -4.383710, 3.926719 )
cfs_GP <- c(-3.498321, 11.443376)
cf4 <- c(-0.07790608, -1.15714339,  2.66908967, -1.35880409, -0.00466856,  0.53110059)
B3 <- cf4[1]+cf4[2]*B2+cf4[3]*BxM+cf4[4]*B2**2+cf4[5]*AQR_GP+cf4[6]*Mach
Vg <- TrueAirspeed (MachNumber (PS_GP, PS_GP*B3), ATX)
A2_GP <- cf3_GP[1]+cf3_GP[2]*AQR_GP+cf3_GP[3]*RR2_GP+cf3_GP[4]*Mach
plot (AKRD, A2_GP, pch=16, cex=0.7, xlab="AKRD [deg.]", 
      xlim=c(1.,5.), ylim=c(-2.,2.),
      ylab="AOA from GP [deg.]")
lines (c(0.0, 5.6), c(0.0-3.65, 5.6-3.66), lty=2, lwd=2, 
       col='orange')
capn5 <- "Comparison of horizontal wind measurements WDG and WSG from the gust pod (red lines) and from the standard wind measurements WDC and WSC (thicker blue lines)."
@

<<Plotted-Results-3, fig.cap=capn5, out.width="300pt", fig.align="center",echo=F,include=F>>=
op <- par (mfrow=c(2,1), mar=c(4,4,0,2)+0.1)
plotWAC (Time, WDC, ylab="Wind Direction [deg.]")
points (Time, WDG, type='l', col='red')
legend ("bottomright", legend=c("WDC", "WDG"), lty=1, col=c('blue', 'red'), cex=0.6)
plotWAC (Time, WSC, ylab="Wind Speed [m/s]")
points (Time, WSG, type='l', col='red')
legend ("bottomright", legend=c("WSC", "WSG"), lty=1, col=c('blue', 'red'), cex=0.6)
capn6 <- "Comparison of vertical wind measurements from the gust pod (red line) and from the standard wind measurement (WIC, blue line)."
@


<<Plotted-Results-4, fig.cap=capn6, out.width="300pt", fig.align="center",echo=F>>=
op <- par (mfrow=c(1,1), mar=c(4,4,5,2)+0.1)
plotWAC (Time, WIC, ylab="Vertical Wind [m/s]")
points (Time, WIG, type='l', col='red')
legend ("bottomright", legend=c("WIC", "WIG"), lty=1, col=c('blue', 'red'))
# sd (Data$WSC-WSG, na.rm=TRUE)
# sd (Data$WDC-WDG, na.rm=TRUE)
@






\begin{figure}
\noindent \begin{centering}
\includegraphics[width=10cm]{GPrf11Fig1}
\par\end{centering}

\protect\caption{\label{fig:3panelHWVW}A comparison between the conventional wind
components (blue lines) and the wind from the gust pod (red lines).
Data from flight RF05.}
\end{figure}
Some plots showing the nature of the new variables (WDG,
WSG, WIG) are included here. The first one (Fig.~\ref{fig:3panelHWVW}) shows a comparison
of all three wind variables for a segment from flight RF11. The spike
in WSG at about 9:43 has a known origin and will be removed. There
is also a short period near 9:23 when the vertical wind measurements
appear offset by a few tenths m/s. Otherwise, the gust pod provides
a good representation of the standard variables. 
\begin{figure}
\noindent \begin{centering}
\includegraphics[width=10cm]{GPrf11Fig2}
\par\end{centering}

\protect\caption{\label{fig:ExpandedViewF1}An expanded view of a section of Fig.~\ref{fig:3panelHWVW}.}


\end{figure}
Figure \ref{fig:ExpandedViewF1} shows an expanded view and emphasizes
the small difference between wind speeds from the two systems; this
is likely caused by IRU differences and can later be improved by reference
to the GPS signals with OMNISTAR. The similarities and differences
in WIG vs WIC are also more evident in this figure.

\begin{figure}
\noindent \begin{centering}
\includegraphics[width=10cm]{GPrf11Fig5}
\par\end{centering}

\protect\caption{\label{fig:VarSpecWICandWIG}variance spectra for WIC (red line, and
also shown smoothed as the blue line), compared to the spectrum for
WIG from the gust pod (green line). Data from flight RF05, 9:15:00--9:40:00.}


\end{figure}
Figure \ref{fig:VarSpecWICandWIG} shows the high-rate variance spectra
from the two systems. There is a significant difference at frequencies
above about 3 Hz, with the gust-pod distribution dropping faster but
the standard wind W(C showing more variance. The high frequency spectrum
from the gust pod may be more realistic; it is unusual to see high
variance at these frequencies without a related generating source.
These spectra were also studied for coherence, which was above 0.9
for frequencies less than 1 Hz but then fell to around 0.2 at 10 Hz.
This is an indication that the two measurements are different in important
ways at the high frequency. This would not be the case if they were
responding with different amplitudes; the signals must really be mostly
incoherent at the highest frequency. The separation wing-to-fuselage
is about 7 m lateral and 13 m longitudinal, so that doesn't seem enough
to cause the low high-frequency coherence. The phase changes from
in-phase at frequencies less than 1 Hz to 180$^{\circ}$ out-of-phase
at 9 Hz, with WIG lagging, so this is consistent with the longitudinal
offset. Shifting WIG relative to WIC also gave maximum coherence if
WIG were shifted forward 1/25 s. 
\begin{figure}
\noindent \begin{centering}
\includegraphics[width=10cm]{GPrf11WIGshiftM1}
\par\end{centering}

\protect\caption{\label{fig:FurtherExpandedWIGshifted}Comparison of WIG (red line)
and WIC (blue line) after shifting WIG 1/25 s earlier to compensate
for the longitudinal displacement of the sensor.}


\end{figure}
 With this shift, there does not appear to be any difference in phase
between the two measurements.

It is important to note that the gust pod does not yet perform well
in turns. The reason is that the orientation of the gust-pod IRU is
not perfectly along the longitudinal axis of the aircraft, and as
a result any roll of the aircraft introduces complex combinations
of roll, heading, and pitch into the gust-pod IRU. It should be possible
to remove these to some extent, although differences in alignment
of the IRU from flight to flight may perturb these angles and make
it difficult to get good measurements in turns. The circle maneuvers
from the calibration flight should provide valuable information regarding
the potential for improving the in-turn performance of the gust pod
.


\section*{Next Steps}
\begin{enumerate}
\item A procedure for processing the gust-pod measurements will be needed.
It may be possible to use code in gusto.c for this purpose or otherwise
to implement the process used here into nimbus, because this is being
done second-by-second as needed for nimbus. Alternately, the code
used here can run after nimbus processing to add the gust-pod variables. If this course is followed, the R script could be improved because
I didn't vectorize the angle transformations yet, in the interest
of getting it to work first.
The software / data processing group will have to decide which is
better, and it may be preferable to use different procedures for DEEPWAVE
and for future use in order to produce the DEEPWAVE data quickly.
\item As noted above, there are issues with the gust-pod measurements in
turns that need to be addressed. These issues will affect the standard
data also because in turbulence the roll changes and this may feed
into the other measurements even at small roll angles.
\item The relative timing of the measurements entering the calculation of
wind still needs to be addressed. The IRU information is transmitted
for recording with some delay, and corrections for those delays are
in place. However, small errors in those delays can cause phase shifts
among the measurements that, for example, result in residual perturbations
of the vertical wind during pitch maneuvers. These should be tuned
to minimize those perturbations.
\item An additional worthwhile study will be to see if using GPS measurements
to determine the Schuler oscillation can improve measurements of pitch
and heading and so lead to improved wind measurements. There is some
evidence of this problem in an apparent changing offset in the vertical
wind, so any improvement here can be very useful to DEEPWAVE.
\end{enumerate}




\begin{center}
\textsf{\textcolor{blue}{-- End of Memo --}}
\par\end{center}

\end{document}
